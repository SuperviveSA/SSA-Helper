// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using Shared.Data;

#nullable disable

namespace Shared.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250706094439_init_db")]
    partial class init_db
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Shared.Data.Entities.Player", b =>
                {
                    b.Property<string>("PlayerId")
                        .HasColumnType("text")
                        .HasColumnName("player_id")
                        .HasAnnotation("Relational:JsonPropertyName", "player_id");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("created_at")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP")
                        .HasAnnotation("Relational:JsonPropertyName", "created_at");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("deleted_at")
                        .HasAnnotation("Relational:JsonPropertyName", "deleted_at");

                    b.Property<decimal?>("DiscordUserId")
                        .HasColumnType("numeric(20,0)")
                        .HasColumnName("discord_user_id")
                        .HasAnnotation("Relational:JsonPropertyName", "discord_user_id");

                    b.Property<string>("LastSyncedMatch")
                        .HasColumnType("text")
                        .HasColumnName("last_synced_match")
                        .HasAnnotation("Relational:JsonPropertyName", "last_synced_match");

                    b.Property<string>("Platform")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("platform")
                        .HasAnnotation("Relational:JsonPropertyName", "platform");

                    b.Property<string>("PlayerIdEncoded")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("player_id_encoded")
                        .HasAnnotation("Relational:JsonPropertyName", "player_id_encoded");

                    b.HasKey("PlayerId");

                    b.HasIndex("CreatedAt");

                    b.HasIndex("DiscordUserId");

                    b.ToTable("player");
                });

            modelBuilder.Entity("Shared.Data.Entities.Supervive.Match", b =>
                {
                    b.Property<string>("MatchId")
                        .HasColumnType("text")
                        .HasColumnName("match_id")
                        .HasAnnotation("Relational:JsonPropertyName", "match_id");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("created_at")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP")
                        .HasAnnotation("Relational:JsonPropertyName", "created_at");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("deleted_at")
                        .HasAnnotation("Relational:JsonPropertyName", "deleted_at");

                    b.Property<decimal?>("InhouseServerId")
                        .HasColumnType("numeric(20,0)")
                        .HasColumnName("inhouse_server_id")
                        .HasAnnotation("Relational:JsonPropertyName", "inhouse_server_id");

                    b.Property<bool>("IsCustomGame")
                        .HasColumnType("boolean")
                        .HasColumnName("is_custom_game")
                        .HasAnnotation("Relational:JsonPropertyName", "is_custom_game");

                    b.Property<bool>("IsInhouse")
                        .HasColumnType("boolean")
                        .HasColumnName("is_inhouse")
                        .HasAnnotation("Relational:JsonPropertyName", "is_inhouse");

                    b.Property<bool>("IsRanked")
                        .HasColumnType("boolean")
                        .HasColumnName("is_ranked")
                        .HasAnnotation("Relational:JsonPropertyName", "is_ranked");

                    b.Property<DateTime>("MatchEnd")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("match_end")
                        .HasAnnotation("Relational:JsonPropertyName", "match_end");

                    b.Property<DateTime>("MatchStart")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("match_start")
                        .HasAnnotation("Relational:JsonPropertyName", "match_start");

                    b.Property<string>("Platform")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("platform")
                        .HasAnnotation("Relational:JsonPropertyName", "platform");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("type")
                        .HasAnnotation("Relational:JsonPropertyName", "type");

                    b.Property<int?>("WinnerTeam")
                        .HasColumnType("integer")
                        .HasColumnName("winner_team")
                        .HasAnnotation("Relational:JsonPropertyName", "winner_team");

                    b.HasKey("MatchId");

                    b.HasIndex("CreatedAt");

                    b.HasIndex("InhouseServerId");

                    b.HasIndex("IsInhouse");

                    b.HasIndex("IsRanked");

                    b.ToTable("match");
                });

            modelBuilder.Entity("Shared.Data.Entities.Supervive.MatchPlayer", b =>
                {
                    b.Property<string>("MatchId")
                        .HasColumnType("text")
                        .HasColumnName("match_id")
                        .HasAnnotation("Relational:JsonPropertyName", "match_id");

                    b.Property<string>("PlayerIdEncoded")
                        .HasColumnType("text")
                        .HasColumnName("player_id_encoded")
                        .HasAnnotation("Relational:JsonPropertyName", "player_id_encoded");

                    b.Property<int>("Assists")
                        .HasColumnType("integer")
                        .HasColumnName("assists")
                        .HasAnnotation("Relational:JsonPropertyName", "assists");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("created_at")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP")
                        .HasAnnotation("Relational:JsonPropertyName", "created_at");

                    b.Property<int>("Deaths")
                        .HasColumnType("integer")
                        .HasColumnName("deaths")
                        .HasAnnotation("Relational:JsonPropertyName", "deaths");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("deleted_at")
                        .HasAnnotation("Relational:JsonPropertyName", "deleted_at");

                    b.Property<float?>("Delta")
                        .HasColumnType("real")
                        .HasColumnName("rating_delta")
                        .HasAnnotation("Relational:JsonPropertyName", "rating_delta");

                    b.Property<double>("HealingGiven")
                        .HasColumnType("double precision")
                        .HasAnnotation("Relational:JsonPropertyName", "healing_given");

                    b.Property<double>("HealingGivenSelf")
                        .HasColumnType("double precision")
                        .HasAnnotation("Relational:JsonPropertyName", "healing_given_self");

                    b.Property<string>("Hero")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("hero")
                        .HasAnnotation("Relational:JsonPropertyName", "hero");

                    b.Property<double>("HeroEffectiveDamageDone")
                        .HasColumnType("double precision")
                        .HasAnnotation("Relational:JsonPropertyName", "hero_effective_damage_done");

                    b.Property<double>("HeroEffectiveDamageTaken")
                        .HasColumnType("double precision")
                        .HasAnnotation("Relational:JsonPropertyName", "hero_effective_damage_taken");

                    b.Property<int>("Kills")
                        .HasColumnType("integer")
                        .HasColumnName("kills")
                        .HasAnnotation("Relational:JsonPropertyName", "kills");

                    b.Property<float?>("Rating")
                        .HasColumnType("real")
                        .HasColumnName("rating")
                        .HasAnnotation("Relational:JsonPropertyName", "rating");

                    b.Property<double>("SurvivalDuration")
                        .HasColumnType("double precision")
                        .HasColumnName("survival_duration")
                        .HasAnnotation("Relational:JsonPropertyName", "survival_duration");

                    b.Property<int>("TeamId")
                        .HasColumnType("integer")
                        .HasColumnName("team_id")
                        .HasAnnotation("Relational:JsonPropertyName", "team_id");

                    b.HasKey("MatchId", "PlayerIdEncoded");

                    b.HasIndex("CreatedAt");

                    b.HasIndex("DeletedAt");

                    b.HasIndex("Hero");

                    b.HasIndex("PlayerIdEncoded");

                    b.HasIndex("TeamId");

                    b.ToTable("match_player");

                    b.HasAnnotation("Relational:JsonPropertyName", "matches_played");
                });

            modelBuilder.Entity("Shared.Data.Entities.Supervive.MatchPlayerAdvancedStats", b =>
                {
                    b.Property<string>("MatchId")
                        .HasColumnType("text")
                        .HasColumnName("match_id")
                        .HasAnnotation("Relational:JsonPropertyName", "match_id");

                    b.Property<string>("PlayerId")
                        .HasColumnType("text")
                        .HasColumnName("player_id")
                        .HasAnnotation("Relational:JsonPropertyName", "player_id");

                    b.Property<int>("Assists")
                        .HasColumnType("integer")
                        .HasColumnName("assists")
                        .HasAnnotation("Relational:JsonPropertyName", "assists");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("created_at")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP")
                        .HasAnnotation("Relational:JsonPropertyName", "created_at");

                    b.Property<int>("CreepKills")
                        .HasColumnType("integer")
                        .HasColumnName("creep_kills")
                        .HasAnnotation("Relational:JsonPropertyName", "creep_kills");

                    b.Property<double>("DamageDone")
                        .HasColumnType("double precision")
                        .HasAnnotation("Relational:JsonPropertyName", "damage_done");

                    b.Property<double>("DamageTaken")
                        .HasColumnType("double precision")
                        .HasAnnotation("Relational:JsonPropertyName", "damage_taken");

                    b.Property<int>("Deaths")
                        .HasColumnType("integer")
                        .HasColumnName("deaths")
                        .HasAnnotation("Relational:JsonPropertyName", "deaths");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("deleted_at")
                        .HasAnnotation("Relational:JsonPropertyName", "deleted_at");

                    b.Property<double>("EffectiveDamageDone")
                        .HasColumnType("double precision")
                        .HasAnnotation("Relational:JsonPropertyName", "effective_damage_done");

                    b.Property<double>("EffectiveDamageTaken")
                        .HasColumnType("double precision")
                        .HasAnnotation("Relational:JsonPropertyName", "effective_damage_taken");

                    b.Property<int>("GoldFromEnemies")
                        .HasColumnType("integer")
                        .HasColumnName("gold_from_enemies")
                        .HasAnnotation("Relational:JsonPropertyName", "gold_from_enemies");

                    b.Property<int>("GoldFromMonsters")
                        .HasColumnType("integer")
                        .HasColumnName("gold_from_monsters")
                        .HasAnnotation("Relational:JsonPropertyName", "gold_from_monsters");

                    b.Property<double>("HealingGiven")
                        .HasColumnType("double precision")
                        .HasAnnotation("Relational:JsonPropertyName", "healing_given");

                    b.Property<double>("HealingGivenSelf")
                        .HasColumnType("double precision")
                        .HasAnnotation("Relational:JsonPropertyName", "healing_given_self");

                    b.Property<double>("HealingReceived")
                        .HasColumnType("double precision")
                        .HasAnnotation("Relational:JsonPropertyName", "healing_received");

                    b.Property<string>("Hero")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("hero")
                        .HasAnnotation("Relational:JsonPropertyName", "hero");

                    b.Property<double>("HeroDamageDone")
                        .HasColumnType("double precision")
                        .HasAnnotation("Relational:JsonPropertyName", "hero_damage_done");

                    b.Property<double>("HeroDamageTaken")
                        .HasColumnType("double precision")
                        .HasAnnotation("Relational:JsonPropertyName", "hero_damage_taken");

                    b.Property<double>("HeroEffectiveDamageDone")
                        .HasColumnType("double precision")
                        .HasAnnotation("Relational:JsonPropertyName", "hero_effective_damage_done");

                    b.Property<double>("HeroEffectiveDamageTaken")
                        .HasColumnType("double precision")
                        .HasAnnotation("Relational:JsonPropertyName", "hero_effective_damage_taken");

                    b.Property<int>("Kills")
                        .HasColumnType("integer")
                        .HasColumnName("kills")
                        .HasAnnotation("Relational:JsonPropertyName", "kills");

                    b.Property<int>("Knocked")
                        .HasColumnType("integer")
                        .HasColumnName("knocked")
                        .HasAnnotation("Relational:JsonPropertyName", "knocked");

                    b.Property<int>("Knocks")
                        .HasColumnType("integer")
                        .HasColumnName("knocks")
                        .HasAnnotation("Relational:JsonPropertyName", "knocks");

                    b.Property<int>("MaxKillStreak")
                        .HasColumnType("integer")
                        .HasColumnName("max_kill_streak")
                        .HasAnnotation("Relational:JsonPropertyName", "max_kill_streak");

                    b.Property<int>("MaxKnockStreak")
                        .HasColumnType("integer")
                        .HasColumnName("max_knock_streak")
                        .HasAnnotation("Relational:JsonPropertyName", "max_knock_streak");

                    b.Property<int>("Ressurects")
                        .HasColumnType("integer")
                        .HasColumnName("ressurects")
                        .HasAnnotation("Relational:JsonPropertyName", "ressurects");

                    b.Property<int>("Revived")
                        .HasColumnType("integer")
                        .HasColumnName("revived")
                        .HasAnnotation("Relational:JsonPropertyName", "revived");

                    b.Property<double>("ShieldMitigatedDamage")
                        .HasColumnType("double precision")
                        .HasAnnotation("Relational:JsonPropertyName", "shield_mitigated_damage");

                    b.Property<double>("SurvivalDuration")
                        .HasColumnType("double precision")
                        .HasColumnName("survival_duration")
                        .HasAnnotation("Relational:JsonPropertyName", "survival_duration");

                    b.HasKey("MatchId", "PlayerId");

                    b.HasIndex("CreatedAt");

                    b.HasIndex("PlayerId");

                    b.ToTable("match_player_advanced_stats");

                    b.HasAnnotation("Relational:JsonPropertyName", "matches_played_advanced_stats");
                });

            modelBuilder.Entity("Shared.Data.Entities.Supervive.MatchPlayer", b =>
                {
                    b.HasOne("Shared.Data.Entities.Supervive.Match", "Match")
                        .WithMany("Players")
                        .HasForeignKey("MatchId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Shared.Data.Entities.Player", "Player")
                        .WithMany("MatchesPlayed")
                        .HasForeignKey("PlayerIdEncoded")
                        .HasPrincipalKey("PlayerIdEncoded")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Match");

                    b.Navigation("Player");
                });

            modelBuilder.Entity("Shared.Data.Entities.Supervive.MatchPlayerAdvancedStats", b =>
                {
                    b.HasOne("Shared.Data.Entities.Supervive.Match", "Match")
                        .WithMany("PlayersAdvancedStats")
                        .HasForeignKey("MatchId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Shared.Data.Entities.Player", "Player")
                        .WithMany("MatchesPlayedAdvancedStats")
                        .HasForeignKey("PlayerId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Match");

                    b.Navigation("Player");
                });

            modelBuilder.Entity("Shared.Data.Entities.Player", b =>
                {
                    b.Navigation("MatchesPlayed");

                    b.Navigation("MatchesPlayedAdvancedStats");
                });

            modelBuilder.Entity("Shared.Data.Entities.Supervive.Match", b =>
                {
                    b.Navigation("Players");

                    b.Navigation("PlayersAdvancedStats");
                });
#pragma warning restore 612, 618
        }
    }
}
