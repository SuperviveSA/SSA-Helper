name: Run all tests

on:
  push:
    branches: [ '**' ]
  pull_request:
    branches: [ '**' ]

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-dotnet@v4
        with:
          dotnet-version: 9.0.x

      - uses: actions/cache@v4
        with:
          path: ~/.nuget/packages
          key: nuget-${{ runner.os }}-${{ hashFiles('**/*.csproj') }}

      - name: Restore packages
        run: dotnet restore

      - name: Lint (.editorconfig compliance)
        run: dotnet format style --verify-no-changes --exclude */Migrations/* --severity info

  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-dotnet@v4
        with:
          dotnet-version: 8.0.x

      - uses: actions/cache@v4
        with:
          path: ~/.nuget/packages
          key: nuget-${{ runner.os }}-${{ hashFiles('**/*.csproj') }}

      - name: Restore packages
        run: dotnet restore

      - name: Build (Release)
        run: dotnet build --configuration Release --no-restore

      - name: Upload build artefacts
        uses: actions/upload-artifact@v4
        with:
          name: build-output
          path: |
            **/bin/Release
            !**/*.pdb

  test:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Create .env from secret
        run: printf '%s' "${{ secrets.ENV_VARIABLES }}" > .env

      - uses: actions/setup-dotnet@v4
        with:
          dotnet-version: 8.0.x

      - uses: actions/cache@v4
        with:
          path: ~/.nuget/packages
          key: nuget-${{ runner.os }}-${{ hashFiles('**/*.csproj') }}

      - name: Download build artefacts
        uses: actions/download-artifact@v4
        with:
          name: build-output
          path: .

      - name: Run tests
        run: dotnet test --configuration Release --no-build --verbosity normal